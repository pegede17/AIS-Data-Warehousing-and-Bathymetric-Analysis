EXPLAIN with fact as (
SELECT coordinate, fact_id from fact_ais_clean_v2 limit 1000
)
	SELECT fact_id, boundary_id
	FROM fact, boundaries_50m
	WHERE ST_INTERSECTS(boundary, coordinate::geometry)
	
SELECT boundary_id, boundary
	FROM public.boundaries_50m
	WHERE ST_INTERSECTS(ST_SetSRID( ST_MakePoint(10.961613, 56.931903), 4326),boundary)
	
	
	
	
	
	

WITH raster as (
SELECT ST_MakeEmptyRaster(20000,20000,4002607::float,3269410::float,50::float,50::float,0::float,0::float,3034) ras
),
fact as (
SELECT * from fact_ais_clean_v2 
WHERE draught IS NOT NULL
	limit 1000000
)
SELECT count(fact_id), max(draught), AVG(draught), ST_Transform(ST_PixelAsPolygon(ras,(ST_WorldToRasterCoord(ras,ST_Transform(coordinate::geometry,3034))).columnx,(ST_WorldToRasterCoord(ras,ST_Transform(coordinate::geometry,3034))).rowy),4326)
FROM raster, fact
GROUP BY  ST_PixelAsPolygon(ras,(ST_WorldToRasterCoord(ras,ST_Transform(coordinate::geometry,3034))).columnx,(ST_WorldToRasterCoord(ras,ST_Transform(coordinate::geometry,3034))).rowy)
ORDER BY count(fact_id) DESC

WITH raster as (
SELECT ST_AddBand(ST_MakeEmptyRaster(20000,20000,4002607::float,3269410::float,50::float,50::float,0::float,0::float,3034),'8BUI'::text, 0, null) ras
),
traj as (
	SELECT * from fact_trajectory
 	WHERE trajectory_id = 2910
-- 	limit 1
)
SELECT trajectory_id, ST_Transform((ST_PixelAsPolygons(ST_Intersection(ras,ST_AsRaster(ST_Transform(ST_SetSRID(coordinates,4326),3034), ras, '8BUI'::text),1))).geom,4326) --(ST_MetaData(ST_Intersection(ras,ST_AsRaster(ST_Transform(ST_SetSRID(coordinates,4326),3034), ras, '8BUI'::text),0))).*
from raster, traj


CREATE MATERIALIZED VIEW test as
WITH raster as (
SELECT ST_MakeEmptyRaster(20000,20000, 10.180489109669665,56.18922493790273,0.0005::float,0.0005::float,0::float,0::float,4326) ras
),
fact as (
SELECT * from fact_ais_clean_v2 limit 1000000
)
SELECT (ST_WorldToRasterCoord(ras,coordinate::geometry)).*, json_build_object('count', count(fact_id), 'max', max(draught), 'avg', AVG(draught), 'polygon', ST_AsGeoJSON(ST_PixelAsPolygon(ras,(ST_WorldToRasterCoord(ras,coordinate::geometry)).columnx,(ST_WorldToRasterCoord(ras,coordinate::geometry)).rowy)))
FROM raster, fact
GROUP BY  ST_AsGeoJSON(ST_PixelAsPolygon(ras,(ST_WorldToRasterCoord(ras,coordinate::geometry)).columnx,(ST_WorldToRasterCoord(ras,coordinate::geometry)).rowy)), ST_WorldToRasterCoord(ras,coordinate::geometry)
ORDER BY max(draught) DESC





WITH raster as (
SELECT ST_MakeEmptyRaster(20000,20000, 5.205498,52.841475,0.0005::float,0.0003::float,0::float,0::float,4326) ras
)
SELECT (ST_RasterToWorldCoord(ras,20000,20000)).*
FROM raster



---------------------------------------------
-- Get raster coordinates for trajectories --
CREATE MATERIALIZED VIEW tester_1000 as
WITH raster as (
SELECT ST_AddBand(ST_MakeEmptyRaster(100,100,3584734::float,2997812::float,1000::float,1000::float,0::float,0::float,3034),'8BUI'::text, 0, null) ras
),
traj as (
	select * from fact_trajectory
	limit 1000
)
SELECT draught[1], ship_type_id, trajectory_id, (ST_WorldToRasterCoord(ras,(ST_PixelAsPoints(ST_AsRaster(ST_Transform(ST_SetSRID(coordinates,4326),3034), ras, '8BUI'::text, 1, 0, true))).geom)).*
from raster, traj



-- CREATE VIEW --
SELECT columnx, rowy, count(trajectory_id), max(draught)
FROM tester_1000
GROUP BY columnx, rowy
ORDER BY count(trajectory_id) DESC

SELECT ST_Transform(ST_SetSRID(ST_PixelAsPolygon(ST_MakeEmptyRaster(20000,20000,3584734::float,2997812::float,50::float,50::float,0::float,0::float,3034),14308,4048),3034),4326)

SELECT ST_WorldToRaster()


