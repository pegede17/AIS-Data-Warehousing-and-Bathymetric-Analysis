Speedsplitter
input: journey (list of points with timestamps), speedThreshold, timeThreshold, upperSpeedLimit


[
    {
        timestamp: '10-02-2010 05:05:05',
        point: '(1,5)',
        sog: 5.1
    }
]

ship_trajectories = []
tempList = []
timeSinceAboveThreshold = 0
lastPointNotAdded
SOGLimit = config[SOGLimit]

foreach point in journey:

    if(speed < speedThreshold):
        if(lastPointNotAdded == null)
            lastPointNotAdded = point
        if(timeSinceAboveThreshold > timeThreshold)
            // Push tempList because trajectory has finished
            ship_trajectories.push(tempList)
            tempList.clear()
        else
            timeSinceAboveThreshold = (journey[point].timestamp - lastPointNotAdded.timestamp)

    if(speed > speedThreshold):
        tempList.add(journey[lastPointNotAdded:point])
        timeSinceAboveThreshold = 0
        lastPointNotAdded = null

    if (local < 5):
        continue;

    lastPointNotAdded
    counter = 0
    local = new DeltaTime(date.now())
    if SOG > speedThreshold:
        if local > DeltaTime(minutes):
            stops.append(journey[counter:point.index]) 


output: trajectory








ship_trajectories = []
ship_stops = []
tempTrajectoryList = []
tempStopList = []
timeSinceAboveThreshold = 0
firstPointNotAdded
SOGLimit = config[SOGLimit]

foreach point in journey:

    if(speed < speedThreshold):
        
        if(timeSinceAboveThreshold < timeThreshold)
            //Keep track of the first point with a low speed and update time since above threshold
            timeSinceAboveThreshold = (journey[point].timestamp - lastPointNotAdded.timestamp)
            if(firstPointNotAdded == null):
                firstPointNotAdded = point
            continue
        if(timeSinceAboveThreshold > timeThreshold)
            //End "sailing session and push to trajectory list
            if(!tempTrajectoryList.isEmpty()):
                ship_trajectories.push(tempTrajectoryList)
                tempTrajectoryList.clear()
            //Add points to current stop session
            if(firstPointNotAdded != null):
                tempStopList.push(firstPointNotAdded:point)
                firstPointNotAdded = null
            else:
                tempStopList.push(point)
                firstPointNotAdded = null

    if(speed > speedThreshold):
        //Reset counters
        timeSinceAboveThreshold = 0
        firstPointNotAdded = null
        
        //End a "stopped" session and push to stops list
        if(!tempStopList.isEmpty()):
            ship_stops.push(tempStopList)
            tempStopList.clear()
        //Add points to current trajectory
        if(firstPointNotAdded != null):
            tempTrajectoryList.push(journey[lastPointNotAdded:point])
        else:
            tempTrajectoryList.push(point)


output: trajectory



